'''
https://atcoder.jp/contests/arc088/tasks/arc088_b

https://blog.csdn.net/algzjh/article/details/78900023

题目大意：

给出一个长度为10^5的01串，操作是每次选一个长度至少为K的区间，将01反转，可进行多次操作，要使得最后为全0，问K最大为多少。


思考:
    怎么样翻转才能把串变成0?

暴力法:
    每次反转1位为0, 而其他位不变?

形式化描述:
    假设num[i] == 1, 怎么把num[i]变成0而其他位不变, 且使Ki最大?
    1<= i <=n

方法:
    其他位翻转2次, num[i]翻转1次

    那ki = max(i-1, n-i)

    假设 ki = i-1 > n-i, 先把[1,i-1] 翻转为1, 再把[1,i]翻转为0

    考虑边界i==1 or i==n, i-1 i+1不存在, 此时,k1 = kn = n-1

    K = min(ki)

    考虑边界 连续的1
    [i,j] 是1, [i-1]是0, [j+1]是0? 此时K=max(i-1, n-j)
    

    考虑反例:
    1111101, K实际是5, 先把0变成1, 再把所有1变成0?

    把所有变成0, 等价于把所有变成1, 那就算两种方法的max值?这样对吗?

    不对,  有的时候把0变1更优, 有的时候把1变0更优

    考虑 [i] [i+1]的情况
    0 1 K = max(i, k-i)
    1 0 K = max(i, k-i)
    0 0 看边界, 在这里得到的k必然比边界的k小
    1 1 看边界, 在这里得到的k必然比边界的k小
    
    所以, 当[i][i+1] 不相等时,把相邻的两个数变成相等的(无所谓0/1), 这样能得到最优解

'''
